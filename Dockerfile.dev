# Development Dockerfile for Pandora Box PWA
# This provides hot reload and debugging capabilities

FROM node:18-alpine AS development

# Install development tools
RUN apk add --no-cache \
    git \
    curl \
    bash \
    vim

# Create app user
RUN addgroup -g 1001 -S nodejs && \
    adduser -S pandora -u 1001

# Set working directory
WORKDIR /app

# Copy package files for both client and server
COPY client/package*.json ./client/
COPY server/package*.json ./server/
COPY package*.json ./

# Install dependencies (including dev dependencies)
RUN cd client && npm ci
RUN cd server && npm ci
RUN npm ci

# Copy source code
COPY client/ ./client/
COPY server/ ./server/

# Create necessary directories
RUN mkdir -p /app/data /app/logs /app/temp && \
    chown -R pandora:nodejs /app

# Install global development tools
RUN npm install -g nodemon concurrently

# Switch to app user
USER pandora

# Expose ports
EXPOSE 3001 5173 9229

# Development command (runs both client and server in watch mode)
CMD ["npm", "run", "dev"]

# Development stage for production builds
FROM node:18-alpine AS development-build

WORKDIR /app

# Copy everything for development builds
COPY . .

# Install all dependencies
RUN cd client && npm ci
RUN cd server && npm ci

# Build client
RUN cd client && npm run build

# Build server
RUN cd server && npm run build

# Production stage (same as main Dockerfile)
FROM node:18-alpine AS production

RUN apk add --no-cache tini curl tzdata

RUN addgroup -g 1001 -S nodejs && \
    adduser -S pandora -u 1001

WORKDIR /app

# Copy built artifacts from development-build stage
COPY --from=development-build --chown=pandora:nodejs /app/server/dist ./server/dist
COPY --from=development-build --chown=pandora:nodejs /app/server/node_modules ./server/node_modules
COPY --from=development-build --chown=pandora:nodejs /app/server/package*.json ./server/
COPY --from=development-build --chown=pandora:nodejs /app/client/dist ./client/dist

RUN mkdir -p /app/data /app/logs /app/temp && \
    chown -R pandora:nodejs /app

# Create startup script
COPY --chown=pandora:nodejs <<EOF /app/start.sh
#!/bin/sh
set -e
echo "Starting Pandora Box PWA..."
cd /app/server
exec node dist/index.js
EOF

RUN chmod +x /app/start.sh

USER pandora

EXPOSE 3001

HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:3001/health || exit 1

ENTRYPOINT ["/sbin/tini", "--"]
CMD ["/app/start.sh"]